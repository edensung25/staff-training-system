{"ast":null,"code":"import _classCallCheck from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cai/Work_project/staff-training-system/client/src/UserDataManagement.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\nimport './UserDataManagement.css';\nimport { Form, Row, Col, Input, Button, Cascader, Select } from 'antd';\nvar Option = Select.Option;\nvar branches = [{\n  value: 'branch-1',\n  label: 'branch-1'\n}, {\n  value: 'branch-2',\n  label: 'branch-2'\n}];\nvar departments = [{\n  value: 'department-1',\n  label: 'department-1'\n}, {\n  value: 'department-2',\n  label: 'department-2'\n}, {\n  value: 'department-3',\n  label: 'department-3'\n}];\nvar grades = [{\n  value: 'Ch1',\n  label: 'Ch1'\n}, {\n  value: 'Ch2',\n  label: 'Ch2'\n}];\n\nvar UserDataManagement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserDataManagement, _React$Component);\n\n  function UserDataManagement() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserDataManagement);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserDataManagement)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      expand: false\n    };\n\n    _this.handleSearch = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        console.log('Received values of form: ', values);\n      });\n    };\n\n    _this.handleReset = function () {\n      _this.props.form.resetFields();\n    };\n\n    _this.toggle = function () {\n      var expand = _this.state.expand;\n\n      _this.setState({\n        expand: !expand\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserDataManagement, [{\n    key: \"getFields\",\n    // To generate mock Form.Item\n    value: function getFields() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var searchFields = ['Name', 'Staff ID', 'Email'];\n      var selectFields = ['Branch', 'Department', 'Grade'];\n      var selectFrom = [branches, departments, grades];\n      var children = [];\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: 'Ch1'\n      })(React.createElement(Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"Ch1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Ch1\"), React.createElement(Option, {\n        value: \"Ch2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Ch2\")));\n\n      for (var i = 0; i < 3; i++) {\n        children.push(React.createElement(Col, {\n          span: 8,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          label: searchFields[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, getFieldDecorator(searchFields[i], {\n          rules: [{\n            required: false,\n            message: 'Input something!'\n          }]\n        })(React.createElement(Input, {\n          placeholder: searchFields[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })))));\n      }\n\n      for (var _i = 0; _i < 3; _i++) {\n        children.push(React.createElement(Col, {\n          span: 8,\n          key: _i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          label: selectFields[_i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, getFieldDecorator(selectFields[_i], {\n          rules: [{\n            required: false,\n            message: 'Input something!'\n          }]\n        })(_i === 2 ? React.createElement(Input, {\n          placeholder: \"Please input a threshold.\",\n          addonBefore: prefixSelector,\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }) : React.createElement(Cascader, {\n          options: selectFrom[_i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })))));\n      }\n\n      return children;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        className: \"ant-advanced-search-form\",\n        onSubmit: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.getFields()), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Search\"), React.createElement(Button, {\n        style: {\n          marginLeft: 8\n        },\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Clear\"))));\n    }\n  }]);\n\n  return UserDataManagement;\n}(React.Component);\n\nUserDataManagement.propTypes = {\n  form: PropTypes.any\n};\nexport default UserDataManagement;","map":{"version":3,"sources":["/Users/cai/Work_project/staff-training-system/client/src/UserDataManagement.jsx"],"names":["React","PropTypes","Form","Row","Col","Input","Button","Cascader","Select","Option","branches","value","label","departments","grades","UserDataManagement","state","expand","handleSearch","e","preventDefault","props","form","validateFields","err","values","console","log","handleReset","resetFields","toggle","setState","getFieldDecorator","searchFields","selectFields","selectFrom","children","prefixSelector","initialValue","width","i","push","rules","required","message","getFields","textAlign","marginLeft","Component","propTypes","any"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\nimport './UserDataManagement.css';\nimport { Form, Row, Col, Input, Button, Cascader, Select } from 'antd';\n\nconst { Option } = Select;\n\nconst branches = [\n    {\n      value: 'branch-1',\n      label: 'branch-1',\n    },\n    {\n      value: 'branch-2',\n      label: 'branch-2',\n    },\n  ];\n\nconst departments = [\n    {\n      value: 'department-1', \n      label: 'department-1'\n    }, \n    {\n      value: 'department-2', \n      label: 'department-2'\n    },\n    {\n      value: 'department-3', \n      label: 'department-3'\n    }\n  ];\nconst grades = [\n  {\n    value: 'Ch1', \n    label: 'Ch1'\n  }, \n  {\n    value: 'Ch2', \n    label: 'Ch2'\n  }\n];\n\nclass UserDataManagement extends React.Component {\n  static propTypes = {\n    form: PropTypes.any,\n  };\n\n  state = {\n    expand: false,\n  };\n\n  // To generate mock Form.Item\n  getFields() {\n    const { getFieldDecorator } = this.props.form;\n    const searchFields = ['Name', 'Staff ID', 'Email'];\n    const selectFields = ['Branch', 'Department', 'Grade'];\n    const selectFrom = [branches, departments, grades];\n    const children = [];\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: 'Ch1',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"Ch1\">Ch1</Option>\n        <Option value=\"Ch2\">Ch2</Option>\n      </Select>,\n    );\n    \n    for (let i = 0; i < 3; i++) {\n      children.push(\n        <Col span={8} key={i} >\n          <Form.Item label={searchFields[i]}>\n            {getFieldDecorator(searchFields[i], {\n              rules: [\n                {\n                  required: false,\n                  message: 'Input something!',\n                },\n              ],\n            })(<Input placeholder={searchFields[i]} />)}\n          </Form.Item>\n        </Col>,\n      );\n    }\n    for (let i = 0; i < 3; i++) {\n      children.push(\n        <Col span={8} key={i} >\n          <Form.Item label={selectFields[i]}>\n            {getFieldDecorator(selectFields[i], {\n              rules: [\n                {\n                  required: false,\n                  message: 'Input something!',\n                },\n              ],\n            })(i === 2 ? \n                <Input \n                  placeholder='Please input a threshold.' \n                  addonBefore={prefixSelector} \n                  style={{ width: '100%' }} \n                /> : \n                <Cascader options={selectFrom[i]} />)\n            }\n          </Form.Item>\n        </Col>,\n      );\n    }\n    return children;\n  }\n\n  handleSearch = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      console.log('Received values of form: ', values);\n    });\n  };\n\n  handleReset = () => {\n    this.props.form.resetFields();\n  };\n\n  toggle = () => {\n    const { expand } = this.state;\n    this.setState({ expand: !expand });\n  };\n\n  render() {\n    return (\n      <Form className=\"ant-advanced-search-form\" onSubmit={this.handleSearch}>\n        <Row gutter={24}>{this.getFields()}</Row>\n        <Row>\n          <Col span={24} style={{ textAlign: 'right' }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Search\n            </Button>\n            <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n              Clear\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nexport default UserDataManagement;"]},"metadata":{},"sourceType":"module"}