{"ast":null,"code":"import _toConsumableArray from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cai/Work_project/staff-training-system/client/src/ChapterList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, List, Button, Tooltip, Skeleton, Progress } from 'antd';\n\nvar ChapterList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChapterList, _React$Component);\n\n  function ChapterList() {\n    _classCallCheck(this, ChapterList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChapterList).apply(this, arguments));\n  }\n\n  _createClass(ChapterList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          chapters = _this$props.chapters,\n          userScores = _this$props.userScores,\n          progresses = _this$props.progresses,\n          onSelectTest = _this$props.onSelectTest,\n          onSelectChapter = _this$props.onSelectChapter;\n      return React.createElement(Card, {\n        title: \"Your Progress\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(List, {\n        className: \"demo-loadmore-list\",\n        itemLayout: \"horizontal\",\n        dataSource: chapters,\n        renderItem: function renderItem(item) {\n          return React.createElement(List.Item, {\n            actions: [React.createElement(Tooltip, {\n              key: \"score\",\n              placement: \"top\",\n              title: Math.max.apply(Math, _toConsumableArray(userScores[item.id])) >= 70 ? \"Passed!\" : \"Not Passed\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, \"Best Score: \", Math.round(Math.max.apply(Math, _toConsumableArray(userScores[item.id])) * 10) / 10), React.createElement(Tooltip, {\n              key: \"chapter\",\n              placement: \"top\",\n              title: \"Read Chapter \".concat(item.id + 1),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }, React.createElement(Button, {\n              value: \"chapterContentPage\",\n              type: \"primary\",\n              shape: \"circle\",\n              icon: \"read\",\n              size: \"small\",\n              onClick: onSelectChapter.bind(null, item.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39\n              },\n              __self: this\n            })), React.createElement(Tooltip, {\n              key: \"test\",\n              placement: \"top\",\n              title: \"Take the test of Chapter \".concat(item.id + 1),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48\n              },\n              __self: this\n            }, progresses[item.id] === item.content.length ? React.createElement(Button, {\n              value: \"testPage\",\n              type: \"primary\",\n              shape: \"circle\",\n              icon: \"form\",\n              size: \"small\",\n              onClick: onSelectTest.bind(null, item.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51\n              },\n              __self: this\n            }) : React.createElement(Button, {\n              type: \"primary\",\n              shape: \"circle\",\n              icon: \"form\",\n              size: \"small\",\n              disabled: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }))],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(Skeleton, {\n            avatar: true,\n            title: false,\n            loading: false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(List.Item.Meta, {\n            title: \"\".concat(item.id + 1, \". \").concat(item.title),\n            description: React.createElement(Progress, {\n              strokeColor: {\n                '0%': '#108ee9',\n                '100%': '#87d068'\n              },\n              percent: progresses[item.id] / item.content.length * 100,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChapterList;\n}(React.Component);\n\nChapterList.propTypes = {\n  chapters: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    content: PropTypes.array,\n    questionSets: PropTypes.array\n  })),\n  userScores: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n  progresses: PropTypes.arrayOf(PropTypes.number),\n  onSelectTest: PropTypes.func,\n  onSelectChapter: PropTypes.func\n};\nexport default ChapterList;","map":{"version":3,"sources":["/Users/cai/Work_project/staff-training-system/client/src/ChapterList.js"],"names":["React","PropTypes","Card","List","Button","Tooltip","Skeleton","Progress","ChapterList","props","chapters","userScores","progresses","onSelectTest","onSelectChapter","item","Math","max","id","round","bind","content","length","title","Component","propTypes","arrayOf","shape","number","string","array","questionSets","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, List, Button, Tooltip, Skeleton, Progress } from 'antd';\n\nclass ChapterList extends React.Component {\n  static propTypes = {\n    chapters: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      content: PropTypes.array,\n      questionSets: PropTypes.array\n    })),\n    userScores: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    progresses: PropTypes.arrayOf(PropTypes.number),\n    onSelectTest: PropTypes.func,\n    onSelectChapter: PropTypes.func,\n  }\n\n  render() {\n    const { chapters, userScores, progresses, onSelectTest, onSelectChapter} = this.props;\n    return (\n            <Card title='Your Progress' bordered={false}>\n              <List\n                className='demo-loadmore-list'\n                itemLayout='horizontal'\n                dataSource={chapters}\n                renderItem={item => (\n                  <List.Item\n                    actions={[\n                      <Tooltip\n                        key='score'\n                        placement='top' \n                        title={Math.max(...userScores[item.id]) >= 70? `Passed!` : `Not Passed`}\n                      >\n                          Best Score: {Math.round(Math.max(...userScores[item.id]) * 10) / 10}\n                      </Tooltip>\n                      ,\n                      <Tooltip key='chapter' placement='top' title={`Read Chapter ${item.id + 1}`}>\n                        <Button \n                          value='chapterContentPage'\n                          type='primary' \n                          shape='circle' \n                          icon='read' \n                          size='small' \n                          onClick={onSelectChapter.bind(null, item.id)}/>\n                      </Tooltip>\n                      ,\n                      <Tooltip key='test' placement='top' title={`Take the test of Chapter ${item.id + 1}`}>\n                        {\n                          progresses[item.id] === item.content.length ?\n                            <Button \n                              value='testPage'\n                              type='primary' \n                              shape='circle' \n                              icon='form' \n                              size='small' \n                              onClick={onSelectTest.bind(null, item.id)}\n                            /> :\n                            <Button type='primary' shape='circle' icon='form' size='small' disabled/>\n                        }\n                      </Tooltip>\n                    ]}\n                  >\n                    <Skeleton avatar title={false} loading={false} >\n                      <List.Item.Meta\n                        title={`${item.id + 1}. ${item.title}`}\n                        description={\n                          <Progress\n                            strokeColor={{\n                              '0%': '#108ee9',\n                              '100%': '#87d068',\n                            }}\n                            percent={progresses[item.id] / item.content.length * 100}\n                          />\n                        }\n                      />\n                    </Skeleton>\n                  </List.Item>\n                )}\n              />\n            </Card>\n    );\n  }\n\n}\nexport default ChapterList;\n"]},"metadata":{},"sourceType":"module"}