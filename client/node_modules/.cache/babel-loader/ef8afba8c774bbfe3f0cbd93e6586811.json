{"ast":null,"code":"import _classCallCheck from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cai/Work_project/staff-training-system/client/src/Login.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\nimport './Login.css';\nimport { Form, Icon, Input, Button, Checkbox, Card } from \"antd\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(Card, {\n        class: \"login-card\",\n        cover: React.createElement(\"img\", {\n          alt: \"example\",\n          src: \"https://99designs-start-attachments.imgix.net/alchemy-pictures/2019%2F01%2F31%2F23%2F02%2F16%2Fb5ebee9e-e517-44b4-8857-53e530a00b53%2FKitasavi.png?auto=format&ch=Width%2CDPR&w=250&h=250\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }),\n        bordered: false,\n        style: {\n          width: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, getFieldDecorator(\"username\", {\n        rules: [{\n          required: true,\n          message: \"Please input your username!\"\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, getFieldDecorator(\"password\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Password!\"\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, getFieldDecorator(\"remember\", {\n        valuePropName: \"checked\",\n        initialValue: true\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Remember me\")), React.createElement(\"a\", {\n        className: \"login-form-forgot\",\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Forgot password\"), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Log in\"))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nLogin.propTypes = {\n  form: PropTypes.any\n};\nexport default Login; // logo: https://i.ibb.co/D83B97y/edin-logo.jpg","map":{"version":3,"sources":["/Users/cai/Work_project/staff-training-system/client/src/Login.jsx"],"names":["React","PropTypes","Form","Icon","Input","Button","Checkbox","Card","Login","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","getFieldDecorator","width","rules","required","message","color","valuePropName","initialValue","Component","propTypes","any"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'antd/dist/antd.css';\nimport './Login.css';\nimport { Form, Icon, Input, Button, Checkbox, Card } from \"antd\";\n\nclass Login extends React.Component {\n  static propTypes = {\n    form: PropTypes.any,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n         <Card\n          class='login-card'\n          cover={<img alt=\"example\"\n          src=\"https://99designs-start-attachments.imgix.net/alchemy-pictures/2019%2F01%2F31%2F23%2F02%2F16%2Fb5ebee9e-e517-44b4-8857-53e530a00b53%2FKitasavi.png?auto=format&ch=Width%2CDPR&w=250&h=250\" />}\n          bordered={false}\n          style={{ width: 300 }}\n        >\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Form.Item>\n              {getFieldDecorator(\"username\", {\n                rules: [\n                  { required: true, message: \"Please input your username!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Username\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"remember\", {\n                valuePropName: \"checked\",\n                initialValue: true\n              })(<Checkbox>Remember me</Checkbox>)}\n              <a className=\"login-form-forgot\" href=\"\">\n                Forgot password\n              </a>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                Log in\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n    );\n  }\n}\n\nexport default Login;\n// logo: https://i.ibb.co/D83B97y/edin-logo.jpg\n"]},"metadata":{},"sourceType":"module"}