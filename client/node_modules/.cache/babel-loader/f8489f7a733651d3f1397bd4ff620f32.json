{"ast":null,"code":"import _classCallCheck from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cai/Work_project/staff-training-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cai/Work_project/staff-training-system/client/src/QuestionSet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { Radio, Button, Card, Icon } from 'antd';\nimport { Statistic, Typography } from 'antd';\nvar Text = Typography.Text;\nvar OPT_MAP = ['A', 'B', 'C', 'D'];\n\nvar ChoiceQuestion =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChoiceQuestion, _React$Component);\n\n  function ChoiceQuestion() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChoiceQuestion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChoiceQuestion)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function (e) {\n      return _this.props.onClick(_this.props.id, e.target.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(ChoiceQuestion, [{\n    key: \"render\",\n    value: function render() {\n      var radioStyle = {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px'\n      }; // show answer\n\n      var _this$props = this.props,\n          answer = _this$props.answer,\n          userAns = _this$props.userAns,\n          id = _this$props.id,\n          statement = _this$props.statement,\n          options = _this$props.options;\n      return React.createElement(React.Fragment, null, id + 1, \". \", statement, \": \", // show answer when answer is not null and userAns is not same as answer:\n      answer && answer !== userAns ? React.createElement(Text, {\n        type: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, 'Ans: ' + answer) : null, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Radio.Group, {\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, options.map(function (o, i) {\n        return React.createElement(Radio, {\n          key: i,\n          style: radioStyle,\n          value: OPT_MAP[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, OPT_MAP[i], \". \", o);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChoiceQuestion;\n}(React.Component);\n\nChoiceQuestion.propTypes = {\n  id: PropTypes.number.isRequired,\n  statement: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  answer: PropTypes.string,\n  userAns: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n};\nChoiceQuestion.defaultProps = {\n  userAns: null\n};\n\nvar QuestionSet =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(QuestionSet, _React$Component2);\n\n  function QuestionSet(props) {\n    var _this2;\n\n    _classCallCheck(this, QuestionSet);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(QuestionSet).call(this, props));\n\n    _this2.onClick = function (i, ans) {\n      if (!_this2.state.userScore) {\n        // update userAnswer\n        var userAnswers = _this2.state.userAnswers.slice();\n\n        userAnswers[i] = ans;\n\n        _this2.setState({\n          userAnswers: userAnswers\n        });\n      }\n    };\n\n    _this2.onSubmit = function (e) {\n      e.preventDefault();\n      var _this2$props = _this2.props,\n          chapterId = _this2$props.chapterId,\n          questionSetIndex = _this2$props.questionSetIndex,\n          onScoreSubmit = _this2$props.onScoreSubmit; // calculate score\n\n      if (!_this2.state.userScore) {\n        var score = _this2.state.userAnswers.filter(function (a, i) {\n          return a === _this2.props.questions[i].correctAnswer;\n        }).length / _this2.props.questions.length * 100;\n\n        _this2.setState({\n          userScore: score\n        });\n\n        onScoreSubmit(chapterId, questionSetIndex, score);\n      }\n    };\n\n    _this2.state = {\n      userAnswers: Array(3).fill(null),\n      userScore: null\n    };\n    return _this2;\n  }\n\n  _createClass(QuestionSet, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          userAnswers = _this$state.userAnswers,\n          userScore = _this$state.userScore;\n      var _this$props2 = this.props,\n          questions = _this$props2.questions,\n          chapterId = _this$props2.chapterId,\n          onQuit = _this$props2.onQuit;\n      return React.createElement(Card, {\n        title: React.createElement(React.Fragment, null, React.createElement(Button, {\n          type: \"link\",\n          onClick: onQuit,\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        })), \"Test for Chapter \".concat(chapterId + 1)),\n        bordered: false,\n        actions: [React.createElement(Button, {\n          key: \"submit\",\n          type: \"link\",\n          onClick: this.onSubmit,\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"check-circle\",\n          key: \"submit\",\n          theme: \"twoTone\",\n          twoToneColor: \"#52c41a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), \"Submit\"), React.createElement(Button, {\n          key: \"quit\",\n          type: \"link\",\n          onClick: onQuit,\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"close-circle\",\n          key: \"quit\",\n          theme: \"twoTone\",\n          twoToneColor: \"#eb2f96\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), \"Quit\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, userScore !== null ? React.createElement(Statistic, {\n        title: \"Your Score:\",\n        value: userScore,\n        precision: 1,\n        valueStyle: {\n          color: userScore >= 70 ? '#3f8600' : '#cf1322'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }) : null, questions.map(function (q, i) {\n        return React.createElement(ChoiceQuestion, {\n          key: i,\n          id: i,\n          statement: q.statement,\n          options: q.options,\n          answer: userScore !== null ? q.correctAnswer : null,\n          userAns: userAnswers[i],\n          onClick: _this3.onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return QuestionSet;\n}(React.Component);\n\nQuestionSet.propTypes = {\n  chapterId: PropTypes.number,\n  questions: PropTypes.arrayOf(PropTypes.shape({\n    statement: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.string),\n    correctAnswer: PropTypes.string\n  })),\n  questionSetIndex: PropTypes.number,\n  onQuit: PropTypes.func,\n  onScoreSubmit: PropTypes.func\n};\nexport default QuestionSet;","map":{"version":3,"sources":["/Users/cai/Work_project/staff-training-system/client/src/QuestionSet.js"],"names":["React","PropTypes","Radio","Button","Card","Icon","Statistic","Typography","Text","OPT_MAP","ChoiceQuestion","onChange","e","props","onClick","id","target","value","radioStyle","display","height","lineHeight","answer","userAns","statement","options","map","o","i","Component","propTypes","number","isRequired","string","arrayOf","func","defaultProps","QuestionSet","ans","state","userScore","userAnswers","slice","setState","onSubmit","preventDefault","chapterId","questionSetIndex","onScoreSubmit","score","filter","a","questions","correctAnswer","length","Array","fill","onQuit","color","q","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { Radio, Button, Card, Icon } from 'antd';\nimport { Statistic, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nconst OPT_MAP = ['A', 'B', 'C', 'D'];\n\nclass ChoiceQuestion extends React.Component {\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    statement: PropTypes.string.isRequired,\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    answer: PropTypes.string,\n    userAns: PropTypes.string, \n    onClick: PropTypes.func.isRequired\n  }\n\n  static defaultProps = { \n    userAns: null\n  }\n  \n  onChange = e => this.props.onClick(this.props.id, e.target.value);\n  \n  render() {\n    const radioStyle = {\n      display: 'block',\n      height: '30px',\n      lineHeight: '30px',\n    };\n    // show answer\n    const { answer, userAns, id, statement, options } = this.props;\n    return(\n      <>\n        {id + 1}. {statement}: { \n          // show answer when answer is not null and userAns is not same as answer:\n          answer && answer !== userAns ?\n            <Text type='danger'>{'Ans: ' + answer}</Text> :\n            null\n        }\n        <br />\n        <Radio.Group onChange={this.onChange}> \n          {\n            options.map((o,i) => (\n              <Radio key={i} style={radioStyle} value={OPT_MAP[i]}>\n                {OPT_MAP[i]}. {o}\n              </Radio>\n            ))\n          }\n        </Radio.Group>\n        <br />\n      </>\n    );\n  }\n}\n\nclass QuestionSet extends React.Component {\n  static propTypes = {\n    chapterId: PropTypes.number,\n    questions: PropTypes.arrayOf(PropTypes.shape({\n      statement: PropTypes.string,\n      options: PropTypes.arrayOf(PropTypes.string),\n      correctAnswer: PropTypes.string \n    })),\n    questionSetIndex: PropTypes.number,\n    onQuit: PropTypes.func,\n    onScoreSubmit: PropTypes.func,\n  };\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      userAnswers: Array(3).fill(null),\n      userScore: null,\n    };\n  }\n\n  onClick = (i,ans) => {\n    if (!this.state.userScore) {\n      // update userAnswer\n      const userAnswers = this.state.userAnswers.slice();\n      userAnswers[i] = ans;    \n      this.setState({userAnswers: userAnswers});\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { chapterId, questionSetIndex, onScoreSubmit } = this.props;\n    // calculate score\n    if (!this.state.userScore) {\n      const score = this.state.userAnswers.filter(\n        (a, i) => a === this.props.questions[i].correctAnswer\n      ).length / this.props.questions.length * 100;\n      \n      this.setState({userScore: score});\n      onScoreSubmit(chapterId, questionSetIndex, score);\n    }\n  };\n\n  render(){\n    const { userAnswers, userScore } = this.state;\n    const { questions, chapterId, onQuit } = this.props;\n\n    return (\n      <Card\n        title={\n          <>\n            <Button type='link' onClick={onQuit} size='large'>\n              <Icon type='left' />\n            </Button>\n            {`Test for Chapter ${chapterId + 1}`}\n          </>\n        }\n        bordered={false}\n        actions={[\n          <Button key='submit' type='link' onClick={this.onSubmit} size='large'>\n            <Icon type='check-circle' key='submit' theme='twoTone' twoToneColor='#52c41a' />\n            Submit\n          </Button>\n          ,\n          <Button key='quit' type='link' onClick={onQuit} size='large'>\n            <Icon type='close-circle' key='quit' theme='twoTone' twoToneColor='#eb2f96' />\n            Quit\n          </Button>\n        ]}\n      >\n        {\n          userScore !== null ?\n            <Statistic\n              title='Your Score:'\n              value={userScore}\n              precision={1}\n              valueStyle={{ color: userScore >= 70 ? '#3f8600' : '#cf1322'}}\n            /> :\n            null\n        }\n        {\n          questions.map((q,i) =>\n            <ChoiceQuestion\n              key={i}\n              id={i} \n              statement={q.statement}\n              options={q.options}\n              answer={userScore !== null? q.correctAnswer: null} \n              userAns={userAnswers[i]} \n              onClick={this.onClick} \n            />\n          )\n        }    \n      </Card>\n    );\n  }\n}\n\nexport default QuestionSet;"]},"metadata":{},"sourceType":"module"}